"use strict";function _interopDefault(e){return e&&"object"==typeof e&&"default"in e?e.default:e}var _regeneratorRuntime=_interopDefault(require("@babel/runtime/regenerator")),_asyncToGenerator=_interopDefault(require("@babel/runtime/helpers/asyncToGenerator")),_toConsumableArray=_interopDefault(require("@babel/runtime/helpers/toConsumableArray")),inquirer=require("inquirer"),child_process=require("child_process"),os=require("os"),ini=require("ini"),fs=require("fs"),chalk=require("chalk"),cmd=_interopDefault(require("commander"));function multipleChoicePrompt(e,t,r){return inquirer.prompt([{type:"list",message:e,name:t,choices:_toConsumableArray(r)}])}function listAssumableRoles(e){return Object.keys(e).filter(removeFilteredKeyword)}function removeFilteredKeyword(e){return e.match(/^(?!profile|default)/i)}function assumableRolesPrompt(e){return multipleChoicePrompt("Pick a role to assume: ","assumedRole",listAssumableRoles(e))}function inputPrompt(e,t){return inquirer.prompt([{type:"type",message:e,name:t}])}function inputMFAPrompt(e){return inputPrompt("Enter MFA token (6 digits) for profile ".concat(e,": "),"mfaToken")}function executeCommand(e,n,s){return child_process.exec(e,function(e,t,r){return e&&e.killed?s(e):r?s(r):n(t)})}function getUser(r){return new Promise(function(e,t){executeCommand("aws iam get-user --query User.UserName --output text --profile ".concat(r),e,t)})}function getMFASerial(r){return new Promise(function(e,t){return executeCommand("aws configure get mfa_serial --profile ".concat(r),e,t)})}function getSourceProfile(r){return new Promise(function(e,t){return executeCommand("aws configure get source_profile --profile ".concat(r),e,t)})}function assumeRole(r,n){var s=2<arguments.length&&void 0!==arguments[2]?arguments[2]:"";return r=r.trim(),n=n.trim(),new Promise(function(e,t){executeCommand("aws sts assume-role --query 'Credentials.[AccessKeyId,SecretAccessKey,SessionToken]' --role-arn ".concat(r," --role-session-name cli-").concat(n," ").concat(s," --output json"),e,t)})}function assumeAwsRole(e,t,r,n){return _assumeAwsRole.apply(this,arguments)}function _assumeAwsRole(){return(_assumeAwsRole=_asyncToGenerator(_regeneratorRuntime.mark(function e(t,r,n,s){var o,a;return _regeneratorRuntime.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,getSourceProfile(t);case 2:return o=e.sent,e.next=5,getUser(o);case 5:return a=e.sent,e.abrupt("return",assumeRole(r,a,"--profile ".concat(o.trim())));case 7:case"end":return e.stop()}},e,this)}))).apply(this,arguments)}function getAwsCredentialPath(){return"win32"===os.platform()?os.homedir()+"/.aws/credentials":"linux"===os.platform()?os.homedir()+"/.aws/credentials":void 0}function loadCredentials(){var e=fs.readFileSync(getAwsCredentialPath(),"utf-8");return ini.parse(e)}function listProfiles(e){return Object.keys(e).filter(removeFilteredKeyword$1)}function removeFilteredKeyword$1(e){return e.match(/^profile/i)}function getAssumableRolePrefixes(e){return e.map(function(e){return e.replace("profile-","")})}function matchProfile(r){return"profile-"+getAssumableRolePrefixes(listProfiles(loadCredentials())).find(function(e){var t=new RegExp("^".concat(e));return r.match(t)})}function getRoleArn(r){return new Promise(function(e,t){return executeCommand("aws configure get role_arn --profile ".concat(r),e,t)})}function list(){return new Promise(function(e,t){return executeCommand("aws configure list",e,t)})}function getSessionToken(r,n,s){return r=r.trim(),n=n.trim(),s=s.trim(),new Promise(function(e,t){executeCommand("aws sts get-session-token --query 'Credentials.[AccessKeyId,SecretAccessKey,SessionToken]' --serial-number ".concat(n," --token-code ").concat(s," --profile ").concat(r," --output json"),e,t)})}function set(r,n){var s=2<arguments.length&&void 0!==arguments[2]?arguments[2]:"";return new Promise(function(e,t){return executeCommand("aws configure set ".concat(r," ").concat(n," ").concat(s),e,t)})}function setTemporaryCredentials(e,t,r,n){return _setTemporaryCredentials.apply(this,arguments)}function _setTemporaryCredentials(){return(_setTemporaryCredentials=_asyncToGenerator(_regeneratorRuntime.mark(function e(t,r,n,s){return _regeneratorRuntime.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,set("aws_access_key_id",t);case 2:return e.next=4,set("aws_secret_access_key",r);case 4:return e.next=6,set("aws_session_token",n);case 6:return e.next=8,set("aws_access_key_id",t,"--profile ".concat(s,"-temp"));case 8:return e.next=10,set("aws_secret_access_key",r,"--profile ".concat(s,"-temp"));case 10:return e.next=12,set("aws_session_token",n,"--profile ".concat(s,"-temp"));case 12:case"end":return e.stop()}},e,this)}))).apply(this,arguments)}function setDefaultCredential(e,t,r){return _setDefaultCredential.apply(this,arguments)}function _setDefaultCredential(){return(_setDefaultCredential=_asyncToGenerator(_regeneratorRuntime.mark(function e(t,r,n){return _regeneratorRuntime.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,set("aws_access_key_id",t);case 2:return e.next=4,set("aws_secret_access_key",r);case 4:return e.next=6,set("aws_session_token",n);case 6:case"end":return e.stop()}},e,this)}))).apply(this,arguments)}function switchRole(){return assumableRolesPrompt(loadCredentials()).then(function(){var t=_asyncToGenerator(_regeneratorRuntime.mark(function e(t){var r,n,s,o,a,i,c,u,l;return _regeneratorRuntime.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return r=t.assumedRole,n=matchProfile(r),e.next=4,getMFASerial(n);case 4:return s=e.sent,e.next=7,getRoleArn(r);case 7:if(o=e.sent,s)return e.next=11,inputMFAPrompt(n);e.next=31;break;case 11:return a=e.sent,i=a.mfaToken,e.next=15,getSessionToken(n,s,i);case 15:return c=e.sent,c=JSON.parse(c),e.next=19,setTemporaryCredentials(c[0],c[1],c[2],n);case 19:return console.log(chalk.green("Enabled temporary session for profile ".concat(n," as default and ").concat(n,"-temp"))),e.next=22,assumeAwsRole(r,o,s,i);case 22:return u=e.sent,u=JSON.parse(u),e.next=26,setDefaultCredential(u[0],u[1],u[2]);case 26:return e.next=28,list();case 28:l=e.sent,console.log(l),console.log(chalk.green("[".concat(r,"]: Assumed role associated with profile ").concat(n)));case 31:case"end":return e.stop()}},e,this)}));return function(e){return t.apply(this,arguments)}}())}var packageMeta=require("../package.json");cmd.version(packageMeta.version,"-v, --version").option("-s, --switch-role","Switch AWS Role").action(function(e,t){return switchRole()}).parse(process.argv);
